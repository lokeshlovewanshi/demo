name: Build Android APK

on:
  push:
    branches:
      - staging
      - production
  workflow_dispatch:
    inputs:
      branch:
        description: "Specify the branch to build for (staging/production)"
        required: false
        default: "staging"

jobs:
  build-android:
    runs-on: ubuntu-latest

    steps:
      # Checkout the repository code
      - uses: actions/checkout@v4

      # Set up Java 17
      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: "temurin"
          java-version: "17"

      # Set up Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "21"

      # Cache node modules
      # - name: Cache node modules
      #   uses: actions/cache@v4
      #   with:
      #     path: ~/.npm
      #     key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
      #     restore-keys: |
      #       ${{ runner.os }}-node-

      # Install project dependencies
      - name: Install Dependencies
        run: npm install

      - name: Make gradlew executable
        run: chmod +x android/gradlew

      # Set build variant based on branch
      - name: Set Build Variant
        id: set-build-variant
        run: |
          if [[ "${{ github.ref_name }}" == "staging" ]]; then
            echo "BUILD_VARIANT=assembleStaging" >> $GITHUB_ENV
            echo "APK_OUTPUT_PATH=android/app/build/outputs/apk/staging/*.apk" >> $GITHUB_ENV
          elif [[ "${{ github.ref_name }}" == "production" ]]; then
            echo "BUILD_VARIANT=assembleRelease" >> $GITHUB_ENV
            echo "APK_OUTPUT_PATH=android/app/build/outputs/apk/release/*.apk" >> $GITHUB_ENV
          else
            echo "Unsupported branch. Exiting..."
            exit 1
          fi

      # Clean Gradle
      - name: Clean Gradle
        working-directory: android
        run: ./gradlew clean

      # Determine Build Type
      - name: Determine Build Type
        id: build_type
        run: |
          if [[ "${{ github.ref_name }}" == "staging" || "${{ github.ref_name }}" == "dev" ]]; then
            echo "BUILD_TYPE=assembleStaging" >> $GITHUB_ENV
          elif [[ "${{ github.ref_name }}" == "production" ]]; then
            echo "BUILD_TYPE=assembleRelease" >> $GITHUB_ENV
          else
            echo "Invalid branch for APK build."
            exit 1
          fi

      # Build APK
      - name: Build APK
        working-directory: android
        run: ./gradlew $BUILD_TYPE

      # Upload APK as artifact
      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: ${{ github.ref_name }}-apk
          path: |
            android/app/build/outputs/apk/staging/*
            android/app/build/outputs/apk/release/*
          retention-days: 5
